version: 2.1
jobs:
  build:
    macos:
      xcode: "14.2.0"
    # resource_class: macos-m1.free
    working_directory: ~/rentachef-react-native
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: |
            sudo gem install -n /usr/local/bin fastlane --verbose
            yarn install 
            cd ios && pod repo update &&  pod install && cd ..

          # yarn add @gorhom/portal
          # yarn install 
          # npm install -g ios-deploy
          # brew update && brew upgrade ruby-build
          # npx react-native bundle --entry-file index.js --platform ios --dev false --bundle-output ios/main.jsbundle --assets-dest ios
          # export NODE_OPTIONS=--openssl-legacy-provider
      - run: 
         name: builld with fastlane
         command: fastlane release_findmybuddy_to_testflight
      # Add a step to decode the provisioning profile
      # - run:
      #     name: Decode Provisioning Profile
      #     command: |
      #       base64 -D -i .circleci/profiles/RAC_Labs_Rentachef__AppStore.mobileprovision -o AppStore.mobileprovision
      #       plutil -convert xml1 AppStore.mobileprovision
            
      # # Add a step to convert the decoded provisioning profile to a .plist file
      # - run:
      #     name: Convert Provisioning Profile to plist
      #     command: security cms -D -i AppStore.mobileprovision > AppStore.plist
      # # Add a step to decode the .p12 certificate
      # - run:
      #     name: Decode Certificate
      #     command: base64 -D -i .circleci/certs/certificate.p12 -o Certificate.p12
      # Set up code signing (You should replace the placeholders with your actual values)
      # - run:
      #     name: Set Up Code Signing
      #     command: |
      #       echo "create keychain"
      #       security create-keychain -p $KEYCHAIN_PASSWORD ~/Library/Keychains/ios-build.keychain
      #       security set-keychain-settings -lut 21600 ~/Library/Keychains/ios-build.keychain
      #       security unlock-keychain -p "$KEYCHAIN_PASSWORD" ~/Library/Keychains/ios-build.keychain
      #       echo "import certificate"
      #       security import .circleci/certs/certificate.p12 -P "$CERTIFICATE_PASSWORD" -A -t cert -f pkcs12 ~/Library/Keychains/ios-build.keychain -T /usr/bin/codesign
      #       security list-keychain -d user -s ~/Library/Keychains/ios-build.keychain
      #       echo "copy profile"
      #       mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
      #       cp .circleci/profiles/RAC_Labs_Rentachef__AppStore.mobileprovision ~/Library/MobileDevice/Provisioning\ Profiles    
      #       security default-keychain -s ios-build.keychain          


      # - run:
      #     name: Build iOS app
      #     command: |
      #       sed -i '' 's/hadOverflow() |/ hadOverflow() ||/' /Users/distiller/rentachef-react-native/node_modules/react-native/ReactCommon/yoga/yoga/Yoga.cpp
      #       cd ios
      #       pod deintegrate
      #       pod cache clean --all
      #       pod install  
      #       export NODE_OPTIONS=--openssl-legacy-provider
      #       xcodebuild  -workspace rentachef.xcworkspace -scheme rentachef   -configuration  Release  -xcconfig exclude.xcconfig   -archivePath build/rentachef.xcarchive archive -allowProvisioningUpdates CODE_SIGN_IDENTITY="iPhone Distribution" PROVISIONING_PROFILE=$PROV_PROFILE_APPLE_STORE_UUID build
      # - run:
      #     name: Create archive and IPA
      #     command: |
      #        cd ios  
      #        pod deintegrate
      #        pod cache clean --all
      #        pod install    
      #        xcodebuild -workspace rentachef.xcworkspace -scheme rentachef  -configuration Release archive -archivePath $PWD/build/rentachef.xcarchive -allowProvisioningUpdates $APPLE_ID_KEY_ID	-authenticationKeyIssuerID $APPLE_ID_ISSUER_ID
      #        ls $PWD/build/
      #        xcodebuild -exportArchive -archivePath $PWD/build/rentachef.xcarchive -exportPath Release -exportOptionsPlist rentachef/Info.plist  -allowProvisioningUpdates    $APPLE_ID_KEY_ID	-authenticationKeyIssuerID $APPLE_ID_ISSUER_ID    

workflows:
  build_and_deploy:
    jobs:
      - build
